name: CI/CD Fastapi_X

on: [push, pull_request]

jobs:

  build:

    env:  
      DB_USERNAME: ${{secrets.DB_USERNAME}}     # you can also define secrets for whole repo: github -> fastapi_X -> settings -> secrets and variables -> actions                    
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_HOST: ${{secrets.DB_HOST}}     
      DB_PORT: ${{secrets.DB_PORT}}
      DB_NAME: ${{secrets.DB_NAME}} 
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}} 
    services:
      postgres:
        image: postgres
        env:   
          #POSTGRES_USER: ${{secrets.DB_USERNAME}} 
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}   # name has to be POSTGRES_PASSWORD 
          POSTGRES_DB: ${{secrets.DB_NAME}}_test 
        ports:
          - 5432:5432          
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5        
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: ["3.12", "3.13"]
    steps:  
      - name: pull git repo (checkout)
        uses: actions/checkout@v4    
      # - name: Set UTC timezone
      #   run: |
      #     sudo timedatectl set-timezone Asia/Tbilisi
      - name: install python
        uses: actions/setup-python@v5
        with: 
          python-version: "3.12"
      - name: upgrade pip
        run: python -m pip install --upgrade pip   
      - name: install dependencies
        run: pip install -r requirements.txt   
      # - name: run pytest tests
      #   run: |
      #     pip install pytest
      #     pytest 
         
  deploy:                              ##--------- UNCOMENT WHEN YOU HAVE SERVER HOST ---------##

    runs-on: ubuntu-latest
    needs: [build]
    env:  
      DB_USERNAME: ${{secrets.PROD_DB_USERNAME}}     # you can also define secrets for whole repo: github -> fastapi_X -> settings -> secrets and variables -> actions                    
      DB_PASSWORD: ${{secrets.PROD_DB_PASSWORD}}
      DB_HOST: ${{secrets.PROD_DB_HOST}}     
      DB_PORT: ${{secrets.PROD_DB_PORT}}
      DB_NAME: ${{secrets.PROD_DB_NAME}} 
      SECRET_KEY: ${{secrets.PROD_SECRET_KEY}}
      ALGORITHM: ${{secrets.PROD_ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.PROD_ACCESS_TOKEN_EXPIRE_MINUTES}} 
    steps:
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
 