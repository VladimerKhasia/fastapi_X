name: CI/CD Fastapi_X

on: [push, pull_request]

jobs:

  build:

    env:  
      DB_USERNAME: ${{secrets.DB_USERNAME}}     # you can also define secrets for whole repo: github -> fastapi_X -> settings -> secrets and variables -> actions                    
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_HOST: ${{secrets.DB_HOST}}     
      DB_PORT: ${{secrets.DB_PORT}}
      DB_NAME: ${{secrets.DB_NAME}} 
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}} 
    services:
      postgres:
        image: postgres
        env:   
          POSTGRES_USER: ${{secrets.DB_USERNAME}} 
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}   # name has to be POSTGRES_PASSWORD 
          DB_NAME: ${{secrets.DB_NAME}}_test 
        ports:
          - 5432:5432           
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5        
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: ["3.12", "3.13"]
    steps:
      - name: pull git repo (checkout)
        uses: actions/checkout@v4
      - name: install python
        uses: actions/setup-python@v5
        with: 
          python-version: "3.12"
      - name: upgrade pip
        run: python -m pip install --upgrade pip   
      - name: install dependencies
        run: pip install -r requirements.txt 

      - name: Start services
        run: docker-compose -f docker-compose-dev.yml up -d --build
      # - name: Wait for PostgreSQL to start
      #   run: |
      #     until pg_isready -h postgres -p 5432; do
      #       >&2 echo "Waiting for PostgreSQL..."
      #       sleep 1
      #     done          
      - name: run pytest tests
        run: |
          pip install pytest
          pytest
